##	导出全局属性配置

#导入文件生成时产生的临时文件存放位置，两种方式：1、绝对目录，如F:/temp，
#2、相对系统根目录目录，如：root:temp(存放在项目根目录的temp文件夹中)
export.tempfilePath= root:temp


###	导出功能配置(一个导出功能对应一项)，根据实际需要，mapperId和className+methodName两种方式二选一即可
###	非特殊需要，第二种方式不建议使用，
###	前台导出js插件中，需要传入的mapperId参数，就是指项目各配置项的共同前缀(例如下面的为：mapperId=export.user1)。
###	配置项含义如下：
###	fileName	：用户在客户端导出下载时显示的文件名。
###	className	：导出功能对应mybatis底层的Mapper接口(包含包路径和接口名)
###	methodName	：导出功能对应mybatis底层的Mapper接口中的方法名
###	mapperId	：导出功能对应mybatis sql配置文件中的，sql语句的id(需要包含命名空间前缀)
###	fileType	：导出文件类型，目前仅支持excel、csv两种
###	columnNames	：导出文件中的对应列名
###	fieldNames	：从数据库中查询数据时，在sql语句中对应的字段名，需和columnNames保持一一对应
#用户导出（方式一）
export.user1.fileName=系统用户报表(方式一).xls
export.user1.className=com.xinlin.app.mapper.SysUserMapper
export.user1.methodName=export
export.user1.fileType=excel
export.user1.columnNames=用户账号,用户姓名
export.user1.fieldNames=user_id,user_name

#用户导出（方式二）
export.user2.fileName=系统用户报表(方式二).csv
export.user2.mapperId=com.xinlin.app.mapper.SysUserMapper.export
export.user2.fileType=csv
export.user2.columnNames=用户账号,用户姓名
export.user2.fieldNames=user_id,user_name