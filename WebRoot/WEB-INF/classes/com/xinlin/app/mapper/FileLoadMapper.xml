<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinlin.app.mapper.FileLoadMapper" >
  <resultMap id="BaseResultMap" type="fileload" >
    <id column="fileId" property="fileid" jdbcType="VARCHAR" />
    <result column="fileName" property="filename" jdbcType="VARCHAR" />
    <result column="fileMark" property="filemark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="fileload" extends="BaseResultMap" >
    <result column="blobFile" property="blobfile" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fileId, fileName, fileMark
  </sql>
  <sql id="Blob_Column_List" >
    blobFile
  </sql>
  
   
  
  <insert id="insertSelective" parameterType="fileload" >
    insert into jcdf_fileuploadbean
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileid != null" >
        fileId,
      </if>
      <if test="filename != null" >
        fileName,
      </if>
      <if test="filemark != null" >
        fileMark,
      </if>
      <if test="blobfile != null" >
        blobFile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileid != null" >
        #{fileid,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filemark != null" >
        #{filemark,jdbcType=VARCHAR},
      </if>
      <if test="blobfile != null" >
        #{blobfile,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="fileload" >
    update jcdf_fileuploadbean
    <set >
      <if test="filename != null" >
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filemark != null" >
        fileMark = #{filemark,jdbcType=VARCHAR},
      </if>
      <if test="blobfile != null" >
        blobFile = #{blobfile,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where fileId = #{fileid,jdbcType=VARCHAR}
  </update>
  
  
  <select id="pageQuery" resultMap="ResultMapWithBLOBs">
		SELECT fileId, fileName, fileMark, blobFile FROM jcdf_fileuploadbean ORDER BY FILEID
  </select>
  
</mapper>